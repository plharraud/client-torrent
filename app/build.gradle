/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.0.1-jre'

	// https://mvnrepository.com/artifact/be.adaxisoft/Bencode
	implementation group: 'be.adaxisoft', name: 'Bencode', version: '2.0.0'

    // https://commons.apache.org/proper/commons-cli/dependency-info.html
    implementation group: 'commons-cli', name: 'commons-cli', version: '1.5.0'

    // https://logging.apache.org/log4j/2.x/maven-artifacts.html
    implementation 'org.apache.logging.log4j:log4j-api:2.19.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.19.0'
}

application {
    // Define the main class for the application.
    mainClass = 'bittorrent.client.App'
}

jar {
    archiveBaseName = 'client'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': 'bittorrent.client.App'
    }
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

/*tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}*/
